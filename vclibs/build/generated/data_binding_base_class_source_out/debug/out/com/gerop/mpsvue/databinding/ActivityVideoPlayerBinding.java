// Generated by view binder compiler. Do not edit!
package com.gerop.mpsvue.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbrackets.android.exomedia.ui.widget.VideoView;
import com.gerop.mpsvue.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoPlayerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView animText;

  @NonNull
  public final RelativeLayout bottom;

  @NonNull
  public final FrameLayout cameraPreview;

  @NonNull
  public final ImageView cancelConnect;

  @NonNull
  public final TextView cntrDown;

  @NonNull
  public final ImageView ivCamera;

  @NonNull
  public final ImageView ivCancel;

  @NonNull
  public final ImageView ivMicrophone;

  @NonNull
  public final ImageView ivVideoicon;

  @NonNull
  public final ImageView tvReportf;

  @NonNull
  public final LinearLayout txtwait;

  @NonNull
  public final VideoView videoView;

  private ActivityVideoPlayerBinding(@NonNull RelativeLayout rootView, @NonNull TextView animText,
      @NonNull RelativeLayout bottom, @NonNull FrameLayout cameraPreview,
      @NonNull ImageView cancelConnect, @NonNull TextView cntrDown, @NonNull ImageView ivCamera,
      @NonNull ImageView ivCancel, @NonNull ImageView ivMicrophone, @NonNull ImageView ivVideoicon,
      @NonNull ImageView tvReportf, @NonNull LinearLayout txtwait, @NonNull VideoView videoView) {
    this.rootView = rootView;
    this.animText = animText;
    this.bottom = bottom;
    this.cameraPreview = cameraPreview;
    this.cancelConnect = cancelConnect;
    this.cntrDown = cntrDown;
    this.ivCamera = ivCamera;
    this.ivCancel = ivCancel;
    this.ivMicrophone = ivMicrophone;
    this.ivVideoicon = ivVideoicon;
    this.tvReportf = tvReportf;
    this.txtwait = txtwait;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anim_text;
      TextView animText = ViewBindings.findChildViewById(rootView, id);
      if (animText == null) {
        break missingId;
      }

      id = R.id.bottom;
      RelativeLayout bottom = ViewBindings.findChildViewById(rootView, id);
      if (bottom == null) {
        break missingId;
      }

      id = R.id.camera_preview;
      FrameLayout cameraPreview = ViewBindings.findChildViewById(rootView, id);
      if (cameraPreview == null) {
        break missingId;
      }

      id = R.id.cancel_connect;
      ImageView cancelConnect = ViewBindings.findChildViewById(rootView, id);
      if (cancelConnect == null) {
        break missingId;
      }

      id = R.id.cntr_down;
      TextView cntrDown = ViewBindings.findChildViewById(rootView, id);
      if (cntrDown == null) {
        break missingId;
      }

      id = R.id.iv_camera;
      ImageView ivCamera = ViewBindings.findChildViewById(rootView, id);
      if (ivCamera == null) {
        break missingId;
      }

      id = R.id.iv_cancel;
      ImageView ivCancel = ViewBindings.findChildViewById(rootView, id);
      if (ivCancel == null) {
        break missingId;
      }

      id = R.id.iv_microphone;
      ImageView ivMicrophone = ViewBindings.findChildViewById(rootView, id);
      if (ivMicrophone == null) {
        break missingId;
      }

      id = R.id.iv_videoicon;
      ImageView ivVideoicon = ViewBindings.findChildViewById(rootView, id);
      if (ivVideoicon == null) {
        break missingId;
      }

      id = R.id.tv_reportf;
      ImageView tvReportf = ViewBindings.findChildViewById(rootView, id);
      if (tvReportf == null) {
        break missingId;
      }

      id = R.id.txtwait;
      LinearLayout txtwait = ViewBindings.findChildViewById(rootView, id);
      if (txtwait == null) {
        break missingId;
      }

      id = R.id.video_view;
      VideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityVideoPlayerBinding((RelativeLayout) rootView, animText, bottom,
          cameraPreview, cancelConnect, cntrDown, ivCamera, ivCancel, ivMicrophone, ivVideoicon,
          tvReportf, txtwait, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
